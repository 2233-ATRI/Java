package src;

import java.util.ArrayList;
import java.util.List;
import java.util.Collection;
import java.util.Collections;
import java.util.HashSet;
import java.util.LinkedHashSet;
import java.util.LinkedList;
import java.util.TreeSet;




public class Solution {

    
    public static void main(String[] args) {
        // TODO Auto-generated method stub
        Collection<Integer>set1=new HashSet<Integer>();
        System.out.println("Time for hash set is "+getTestTime(set1,500000)+" milliseconds");
        
        Collection<Integer>set2=new LinkedHashSet<Integer>();
        System.out.println("Time for linked hash set is "+getTestTime(set2, 500000)+" milliseconds");
        
        Collection<Integer>set3=new TreeSet<Integer>();
        System.out.println("Time for tree set is "+getTestTime(set3, 500000)+" milliseconds");
        
        Collection<Integer>set4=new ArrayList<Integer>();
        System.out.println("Time for arraylist is "+getTestTime(set4, 500000)+" milliseconds");
        
        Collection<Integer>set5=new LinkedList<Integer>();
        System.out.println("Time for linked list is "+getTestTime(set5, 500000)+" milliseconds");
        
        System.out.println("\nGame Over!");
    }
    
    public static long getTestTime(Collection<Integer>c,int size){
        long startTime=System.currentTimeMillis();
        List<Integer>list=new ArrayList<Integer>();
        for(int i=0;i<size;i++){
            list.add(i);
        }
        
        Collections.shuffle(list);
        for(int ele:list){
            c.add(ele);
        }
        
        Collections.shuffle(list);
        
        for(int ele:list){
            c.remove(ele);
        }
        
        long endTime=System.currentTimeMillis();
        return endTime-startTime;
    }
}
